- name: scripts to enable/disable zram
  template: src=template/scripts/{{ item }} dest=/usr/local/bin/{{ item }} mode=0755
  with_items:
    - zram-start.sh
    - zram-stop.sh

- name: systemd service to enable zram
  template: src=template/systemd/system/zram.service dest=/etc/systemd/system/zram.service mode=0644

- name: enable systemd service to enable zram
  service: name=zram.service enabled=yes

- name: install apt sources.list
  template: src=common/apt/sources.list dest=/etc/apt/sources.list mode=0644
  register: apt_sources_list

- name: update apt cache
  apt: update_cache=yes
  when: apt_sources_list is changed

- name: disable apt periodic update
  template: src=template/{{ item }} dest=/etc/{{ item }}
  with_items: [ apt/apt.conf.d/10periodic ]
# Apparmor profiles do not work with custom mounting scheme for rootfs

- name: remove apparmor and snapd
  apt:
    state: absent
    purge: yes
    package:
      - apparmor
      - snapd

- name: remove unnecessary packages
  apt: package="{{ packages_to_remove }}" state=absent purge=yes

- name: upgrade all packages
  apt:
    upgrade: dist

- name: remove dependencies that are no longer required
  apt:
    autoremove: yes

- name: disable sshd password login
  lineinfile: path=/etc/ssh/sshd_config regexp='^PasswordAuthentication' line='PasswordAuthentication no'
  notify: reload sshd

- name: install required packages
  apt: 
    state: latest
    package:
      - initramfs-tools
      - squashfs-tools
      # - aufs-tools
      - cpio
      # console autologin
      - mingetty
      # required for uvesafb framebuffer module
      # this package has built-in hooks for initramfs-tools
      - v86d

- name: remove virtual linux kernel packages and headers
  apt: 
    state: absent
    package:
      - linux-image-virtual
      - linux-headers-virtual

- name: install generic linux kernel and firmware packages
  apt: 
    state: latest
    package:
      - "{{ linux_kernel_package }}"
      - linux-firmware
      - amd64-microcode
      - intel-microcode

# We do not need old kernels and modules to take space in rootfs image
- name: remove old linux kernel and header packages
  shell: |
    export DEBIAN_FRONTEND=noninteractive
    dpkg -l 'linux-image-[0-9]*' | grep ^i | tr -s ' ' | cut -d' ' -f2 | sort -r | sed 1d  | xargs apt purge --allow-remove-essential -y
    dpkg -l 'linux-modules-[0-9]*' | grep ^i | tr -s ' ' | cut -d' ' -f2 | sort -r | sed 1d  | xargs apt purge --allow-remove-essential -y
    dpkg -l 'linux-modules-extra-[0-9]*' | grep ^i | tr -s ' ' | cut -d' ' -f2 | sort -r | sed 1d  | xargs apt purge --allow-remove-essential -y
    apt-get purge --allow-remove-essential -y 'linux-headers-*' 'linux-tools-*' 'linux-cloud-tools-*'

- name: install initramfs hook script and config
  copy: src=template/{{ item }} dest=/etc/{{ item }} mode=0755
  with_items:
    - initramfs-tools/hooks/zz_custom
    - initramfs-tools/scripts/ram
    - initramfs-tools/initramfs.conf
  notify: update initramfs
  register: initramfs_config
  tags: initramfs-conf

# This also may be done by handler, but if playbook fails at any step, handler doesn't start and we have initrd without boot script
- name: update initramfs
  shell: update-initramfs -u
  when: initramfs_config is changed

- name: create helper directory for aufs
  file: path=/AUFS state=directory mode=0755

- name: create config directory getty@tty1.service.d
  file: path=/etc/systemd/system/getty@tty1.service.d state=directory

- name: config autologin on first console
  template: src=template/{{ item }} dest=/etc/{{ item }} mode=0644
  with_items:
    - systemd/system/getty@tty1.service.d/override.conf
  notify: systemctl daemon-reload

- name: set password for autologin user to enable autologin
  user: name={{ autologin_user }} password={{ autologin_user | password_hash('sha512', 'salt') }}
